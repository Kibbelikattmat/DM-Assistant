import{s as safe_not_equal,a as src_url_equal,n as noop,o as onMount,b as onDestroy}from"../chunks/scheduler.B38kYqKd.js";import{S as SvelteComponent,i as init,e as element,s as space,c as claim_element,a as children,f as claim_space,k as get_svelte_dataset,d as detach,l as attr,g as insert_hydration,h as append_hydration,m as listen}from"../chunks/index.UftirYqY.js";function create_fragment(t){let n,a,i,o,r,d="Add Combatant (</-)",c,p,m="",u,y;return{c(){n=element("main"),a=element("img"),o=space(),r=element("button"),r.textContent=d,c=space(),p=element("div"),p.innerHTML=m,this.h()},l(s){n=claim_element(s,"MAIN",{class:!0});var l=children(n);a=claim_element(l,"IMG",{src:!0,alt:!0,class:!0}),o=claim_space(l),r=claim_element(l,"BUTTON",{class:!0,"data-svelte-h":!0}),get_svelte_dataset(r)!=="svelte-1f9d9af"&&(r.textContent=d),c=claim_space(l),p=claim_element(l,"DIV",{class:!0,"data-svelte-h":!0}),get_svelte_dataset(p)!=="svelte-rmp1yo"&&(p.innerHTML=m),l.forEach(detach),this.h()},h(){src_url_equal(a.src,i="Battlebackground.webp")||attr(a,"src",i),attr(a,"alt","hej"),attr(a,"class","pic svelte-uxjs1i"),attr(r,"class","Combatant svelte-uxjs1i"),attr(p,"class","container svelte-uxjs1i"),attr(n,"class","Site svelte-uxjs1i")},m(s,l){insert_hydration(s,n,l),append_hydration(n,a),append_hydration(n,o),append_hydration(n,r),append_hydration(n,c),append_hydration(n,p),u||(y=listen(r,"click",t[0]),u=!0)},p:noop,i:noop,o:noop,d(s){s&&detach(n),u=!1,y()}}}function sortDivs(){const t=document.querySelector(".container"),n=Array.from(t.getElementsByClassName("dynamic-div"));n.sort((a,i)=>{const o=parseInt(a.querySelector("input.rank-input").value,10)||0;return(parseInt(i.querySelector("input.rank-input").value,10)||0)-o}),n.forEach(a=>t.appendChild(a))}function instance($$self){let combatants=[],listenersAdded=!1;onMount(()=>{let t=window.localStorage.getItem("combatants");if(t!=null){combatants=JSON.parse(t);for(let n of combatants)createCombatant(n.name,n.notes,n.initiative,n.hp,!1)}listenersAdded||(document.addEventListener("keydown",handleKeyDown),listenersAdded=!0)}),onDestroy(()=>{listenersAdded&&(document.removeEventListener("keydown",handleKeyDown),listenersAdded=!1)});function handleKeyDown(t){t.key==="<"?createEmptyCombatant():t.key==="-"&&createPrefilledCombatant()}function createNewDiv(){const t=prompt("Enter '1' to add a pre-filled combatant or '2' to add an empty combatant:");t==="1"?createPrefilledCombatant():t==="2"?createEmptyCombatant():alert("Invalid choice. Please enter '1' or '2'.")}function createPrefilledCombatant(){let t=prompt("Enter initiative:");if(t===null||t.trim()==="")return;if(t=parseInt(t,10),isNaN(t)){alert("Invalid initiative. Please enter a number.");return}let n=prompt("Enter HP:");if(n===null||n.trim()==="")return;if(n=parseInt(n,10),isNaN(n)){alert("Invalid HP. Please enter a number.");return}let a=prompt("Enter combatant name:");if(a===null||a.trim()==="")return;let i=prompt("Enter notes:");i===null&&(i=""),createCombatant(a,i,t,n,!0)}function createEmptyCombatant(){createCombatant("Combatant","Notes","","",!0)}function saveCombatants(){let t=JSON.stringify(combatants);window.localStorage.setItem("combatants",t)}function createCombatant(name,notes,initiative,hp,save){save&&(combatants=[...combatants,{name,notes,initiative,hp}],saveCombatants());const newDiv=document.createElement("div"),nameSpan=document.createElement("span");nameSpan.textContent=name,nameSpan.style.color="yellow",nameSpan.contentEditable="true",nameSpan.style.whiteSpace="pre-wrap",nameSpan.style.maxWidth="150px",nameSpan.addEventListener("input",updateCombatant);const notesSpan=document.createElement("span");notesSpan.textContent=notes,notesSpan.style.color="white",notesSpan.contentEditable="true",notesSpan.style.marginLeft="20px",notesSpan.style.marginRight="20px",notesSpan.style.whiteSpace="pre-wrap",notesSpan.style.maxWidth="150px",notesSpan.addEventListener("input",updateCombatant);const inputWrapper=document.createElement("div");inputWrapper.style.display="flex",inputWrapper.style.alignItems="center",inputWrapper.style.flexWrap="wrap";const initiativeInput=document.createElement("input");initiativeInput.type="number",initiativeInput.className="rank-input",initiativeInput.style.width="50px",initiativeInput.style.textAlign="right",initiativeInput.value=initiative,initiativeInput.addEventListener("change",updateCombatant);const initiativeText=document.createElement("span");initiativeText.textContent="Initiative",initiativeText.style.fontSize="medium",initiativeText.style.marginLeft="5px",initiativeText.style.color="yellow";const hpWrapper=document.createElement("div");hpWrapper.style.display="flex",hpWrapper.style.alignItems="center",hpWrapper.textContent="",hpWrapper.style.marginLeft="20px";const hpInput=document.createElement("input");hpInput.type="text",hpInput.style.width="50px",hpInput.style.textAlign="right",hpInput.value=hp,hpInput.addEventListener("change",updateCombatant);const hpText=document.createElement("span");hpText.textContent="HP",hpText.style.fontSize="medium",hpText.style.marginLeft="5px",hpText.style.color="yellow",hpInput.addEventListener("keypress",function(e){if(e.key==="Enter"){e.preventDefault();const currentValue=parseInt(hpInput.value,10)||0,newValue=prompt("Enter adjustment (e.g., -10):");if(newValue!==null&&newValue.trim()!=="")try{const result=eval(currentValue+newValue);hpInput.value=result,updateCombatant()}catch(t){alert("Invalid input.")}}}),inputWrapper.appendChild(initiativeInput),inputWrapper.appendChild(initiativeText),hpWrapper.appendChild(hpInput),hpWrapper.appendChild(hpText),inputWrapper.appendChild(hpWrapper);const buttonWrapper=document.createElement("div");buttonWrapper.style.display="flex",buttonWrapper.style.flexDirection="column",buttonWrapper.style.marginLeft="10px";const duplicateButton=document.createElement("button");duplicateButton.textContent="Duplicate",duplicateButton.style.borderColor="black",duplicateButton.style.borderWidth="3px",duplicateButton.style.backgroundColor="blue",duplicateButton.addEventListener("click",()=>duplicateCombatant(newDiv));const deleteButton=document.createElement("button");deleteButton.textContent="Delete",deleteButton.style.backgroundColor="red",deleteButton.style.borderColor="black",deleteButton.style.borderWidth="3px",deleteButton.style.color="white",deleteButton.style.marginTop="5px",deleteButton.addEventListener("click",()=>deleteCombatant(newDiv)),buttonWrapper.appendChild(duplicateButton),buttonWrapper.appendChild(deleteButton),newDiv.appendChild(nameSpan),newDiv.appendChild(notesSpan),newDiv.appendChild(inputWrapper),newDiv.appendChild(buttonWrapper),newDiv.style.border="2px solid yellow",newDiv.style.margin="5px",newDiv.style.padding="10px",newDiv.style.flex="1",newDiv.style.display="flex",newDiv.style.flexWrap="wrap",newDiv.style.justifyContent="space-between",newDiv.style.alignItems="center",newDiv.style.backgroundColor="rgba(0, 0, 0, 0.5)",newDiv.classList.add("dynamic-div");const container=document.querySelector(".container");container.appendChild(newDiv),sortDivs()}function duplicateCombatant(t){const n=t.querySelector("span").textContent,a=t.querySelectorAll("span")[1].textContent,i=t.querySelector("input.rank-input").value,o=t.querySelectorAll("input")[1].value;createCombatant(n,a,i,o,!0)}function deleteCombatant(t){const n=Array.from(t.parentNode.children).indexOf(t);combatants.splice(n,1),window.localStorage.setItem("combatants",JSON.stringify(combatants)),t.remove()}function updateCombatant(){combatants=Array.from(document.querySelectorAll(".dynamic-div")).map(t=>({name:t.querySelector("span[contenteditable]").textContent,notes:t.querySelectorAll("span[contenteditable]")[1].textContent,initiative:t.querySelector("input.rank-input").value,hp:t.querySelectorAll('input[type="text"]')[0].value})),saveCombatants()}return[createNewDiv]}class Page extends SvelteComponent{constructor(n){super(),init(this,n,instance,create_fragment,safe_not_equal,{})}}export{Page as component};
